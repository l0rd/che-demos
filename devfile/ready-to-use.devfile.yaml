specVersion: 0.0.1
name: chectl-generated
projects:
  - source:
      type: git
      location: 'https://github.com/sleshchenko/NodeJS-Sample-App.git'
    name: NodeJS-Sample-App.git
components:
  - type: kubernetes
    alias: employee-manager
    referenceContent: |
      kind: List
      apiVersion: v1
      metadata:
        name: app.kubernetes.io/name=employee-manager
      items:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app.kubernetes.io/component: database
              app.kubernetes.io/name: employee-manager
            name: mongo
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/component: database
                app.kubernetes.io/name: employee-manager
            template:
              metadata:
                labels:
                  app.kubernetes.io/component: database
                  app.kubernetes.io/name: employee-manager
                name: mongo
              spec:
                volumes:
                  - name: mongo-persistent-storage
                    persistentVolumeClaim:
                      claimName: mongo-persistent-storage
                containers:
                  - name: mongo
                    image: mongo
                    ports:
                      - name: mongo
                        containerPort: 27017
                        protocol: TCP
                    resources: {}
                    volumeMounts:
                      - name: mongo-persistent-storage
                        mountPath: /data/db
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: Always
                restartPolicy: Always
                terminationGracePeriodSeconds: 30
                dnsPolicy: ClusterFirst
                securityContext: {}
                schedulerName: default-scheduler
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app.kubernetes.io/component: nodejs-app
              app.kubernetes.io/name: employee-manager
            name: nodejs-app
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/component: nodejs-app
                app.kubernetes.io/name: employee-manager
            template:
              metadata:
                labels:
                  app.kubernetes.io/component: nodejs-app
                  app.kubernetes.io/name: employee-manager
                name: nodejs-app
              spec:
                volumes:
                  - name: projects
                    persistentVolumeClaim:
                      claimName: projects
                containers:
                  - name: web-app
                    image: 'sleshchenko/nodejs-mongo-sample:latest'
                    command: ['tail']
                    args: ['-f', '/dev/null']
                    ports:
                      - name: http-server
                        containerPort: 3000
                        protocol: TCP
                    env:
                      - name: MONGO_HOST
                        value: mongo
                      - name: MONGO_PORT
                        value: '27017'
                    resources: {}
                    volumeMounts:
                      - name: projects
                        mountPath: /projects
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: Always
                restartPolicy: Always
                terminationGracePeriodSeconds: 30
                dnsPolicy: ClusterFirst
                securityContext: {}
                schedulerName: default-scheduler
        - kind: Service
          apiVersion: v1
          metadata:
            labels:
              app.kubernetes.io/component: database
              app.kubernetes.io/name: employee-manager
            name: mongo
          spec:
            type: ClusterIP
            selector:
              app.kubernetes.io/component: database
              app.kubernetes.io/name: employee-manager
            ports:
              - port: 27017
        - kind: Service
          apiVersion: v1
          metadata:
            labels:
              app.kubernetes.io/component: nodejs-app
              app.kubernetes.io/name: employee-manager
            name: web
          spec:
            type: LoadBalancer
            selector:
              app.kubernetes.io/component: nodejs-app
              app.kubernetes.io/name: employee-manager
            ports:
              - port: 80
        -
          apiVersion: extensions/v1beta1
          kind: Ingress
          metadata:
            name: nodejs-ingress
            labels:
              app.kubernetes.io/name: employee-manager
              app.kubernetes.io/component: nodejs-app
            annotations:
              kubernetes.io/ingress.class: "nginx"
          spec:
            rules:
            - host: nodejs.192.168.99.100.nip.io
              http:
                paths:
                - path: /
                  backend:
                    serviceName: web
                    servicePort: 80
        - kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            labels:
              app.kubernetes.io/component: database
              app.kubernetes.io/name: employee-manager
            name: mongo-persistent-storage
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
        - kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            labels:
              app.kubernetes.io/component: nodejs-app
              app.kubernetes.io/name: employee-manager
            name: projects
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
  - type: chePlugin
    alias: typescript-ls
    id: che-incubator/typescript/1.30.2
  - type: chePlugin
    id: redhat/vscode-yaml/0.4.0
  - type: chePlugin
    alias: k8s-tooling
    reference: http://che-plugin-registry-che.192.168.64.54.nip.io/v3/plugins/ms-kubernetes-tools/vscode-kubernetes-tools/1.0.0/meta.yaml
commands:
  - name: run
    actions:
      - type: exec
        component: employee-manager
        command: cd ${CHE_PROJECTS_ROOT}/NodeJS-Sample-App.git/EmployeeDB && node app.js
  - name: stop
    actions:
      - type: exec
        component: employee-manager
        command: pkill node
